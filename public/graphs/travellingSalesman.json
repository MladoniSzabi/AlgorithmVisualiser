{
    "options": {
        "type": "Undirected",
        "multi": false,
        "allowSelfLoops": true
    },
    "attributes": {},
    "code": "const START_NODE_COLOR = \"green\"\nlet startNode = null\nlet otherNodes = []\n\nfunction perm(xs) {\n  let ret = [];\n\n  for (let i = 0; i < xs.length; i = i + 1) {\n    let rest = perm(xs.slice(0, i).concat(xs.slice(i + 1)));\n\n    if(!rest.length) {\n      ret.push([xs[i\n                ]\n            ])\n        } else {\n      for(let j = 0; j < rest.length; j = j + 1) {\n        ret.push([xs[i\n                    ]\n                ].concat(rest[j\n                ]))\n            }\n        }\n    }\n  return ret;\n}\n\ngraph.forEachNode((node, attr) => {\n    if(attr['color'\n    ] == START_NODE_COLOR) {\n        startNode = node\n    } else {\n        otherNodes.push(node)\n    }\n})\n\nlet bestCycle = null\nlet bestCycleVal = Number.MAX_SAFE_INTEGER\nfor(let permutation of perm(otherNodes)) {\n    let currentVal = 0\n    let previousNode = startNode\n    permutation.push(startNode)\n\n    for(let node of permutation) {\n        let edge = graph.findEdge(previousNode, node, () => true)\n        if( edge === undefined) {\n            currentVal = Number.MAX_SAFE_INTEGER\n            break\n        }\n\n        currentVal += parseInt(graph.getEdgeAttribute(edge, 'label'))\n        previousNode = node\n    }\n\n    if(currentVal !== Number.MAX_SAFE_INTEGER && currentVal < bestCycleVal) {\n        bestCycleVal = currentVal\n        bestCycle = [startNode, ...permutation\n        ]\n    }\n}\n\nconsole.log(bestCycleVal, bestCycle)",
    "nodes": [
        {
            "key": "0",
            "attributes": {
                "x": 0.1,
                "y": 0.1,
                "color": "green"
            }
        },
        {
            "key": "1",
            "attributes": {
                "x": 0.9,
                "y": 0.1,
                "color": "#000"
            }
        },
        {
            "key": "2",
            "attributes": {
                "x": 0.1,
                "y": 0.9,
                "color": "#000"
            }
        },
        {
            "key": "3",
            "attributes": {
                "x": 0.9,
                "y": 0.9,
                "color": "#000"
            }
        }
    ],
    "edges": [
        {
            "key": "geid_56_0",
            "source": "0",
            "target": "1",
            "attributes": {
                "label": 20
            }
        },
        {
            "key": "geid_56_1",
            "source": "1",
            "target": "2",
            "attributes": {
                "label": 34
            }
        },
        {
            "key": "geid_56_2",
            "source": "2",
            "target": "3",
            "attributes": {
                "label": 12
            }
        },
        {
            "key": "geid_56_3",
            "source": "3",
            "target": "0",
            "attributes": {
                "label": 42
            }
        }
    ]
}